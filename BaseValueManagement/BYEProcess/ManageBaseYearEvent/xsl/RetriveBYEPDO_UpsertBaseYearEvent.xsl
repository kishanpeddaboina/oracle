<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns6="http://assessor.lacounty.gov/amp/type/common/ResponseHeader/v1.0" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:bpmo="http://xmlns.oracle.com/bpm/bpmobject/" xmlns:ns5="http://assessor.lacounty.gov/amp/type/common/RequestHeader/v1.0" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns2="http://xmlns.oracle.com/bpm/bpmobject/Data/SortBYEBO" xmlns:ns3="http://xmlns.oracle.com/bpm/bpmobject/Data/AssignToUserOrGroupBO" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ns1="http://assessor.lacounty.gov/amp/data/bvm/RetrieveBYE/v1.0" xmlns:ns0="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:ns7="http://assessor.lacounty.gov/amp/data/bvm/UpsertBaseYearEvents/v1.0" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns4="http://assessor.lacounty.gov/amp/type/bvm/BaseYearEvent/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:tns="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns6 bpmo ns5 ns2 ns3 ns1 ns0 ns4 xsd tns ns7 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../businessCatalog/Data/RetriveBYEDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="RetriveBYEDetails" namespace="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails"/>
            <oracle-xsl-mapper:param name="RetriveBYE_PDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/ManageBYE.xsd"/>
            <oracle-xsl-mapper:rootElement name="manageBYERequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0"/>
            <oracle-xsl-mapper:param name="ManageBYE_ReqPDO"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/UpsertBaseYearEvents.xsd"/>
            <oracle-xsl-mapper:rootElement name="UpsertBaseYearEventsRequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/UpsertBaseYearEvents/v1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU MAR 09 12:18:03 IST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="ManageBYE_ReqPDO"/>
  <xsl:template match="/">
    <ns7:UpsertBaseYearEventsRequest>
      <ns7:header>
        <ns5:applicationId>
          <xsl:value-of select="$ManageBYE_ReqPDO/tns:manageBYERequest/tns:header/ns5:applicationId"/>
        </ns5:applicationId>
        <ns5:requestId>
          <xsl:value-of select="$ManageBYE_ReqPDO/tns:manageBYERequest/tns:header/ns5:requestId"/>
        </ns5:requestId>
      </ns7:header>
      <ns7:ain>
        <xsl:value-of select="$ManageBYE_ReqPDO/tns:manageBYERequest/tns:ain"/>
      </ns7:ain>
      <ns7:userId>
        <xsl:value-of select="$ManageBYE_ReqPDO/tns:manageBYERequest/tns:userId"/>
      </ns7:userId>
      <ns7:aoid>
        <xsl:value-of select="$ManageBYE_ReqPDO/tns:manageBYERequest/tns:aoid"/>
      </ns7:aoid>
      <ns7:processStatus>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:processStatus"/>
      </ns7:processStatus>
      <ns7:ecid>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:ecid"/>
      </ns7:ecid>
      <ns7:dbLockStatus>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:dbLockStatus"/>
      </ns7:dbLockStatus>
      <ns7:lockedByUserId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:lockedByUserId"/>
      </ns7:lockedByUserId>
      <ns7:districtId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:districtId"/>
      </ns7:districtId>
      <ns7:districtName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:districtName"/>
      </ns7:districtName>
      <ns7:region>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:region"/>
      </ns7:region>
      <ns7:regionName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:regionName"/>
      </ns7:regionName>
      <ns7:clusterRouteId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRouteId"/>
      </ns7:clusterRouteId>
      <ns7:clusterRoute>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRoute"/>
      </ns7:clusterRoute>
      <ns7:clusterRouteName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRouteName"/>
      </ns7:clusterRouteName>
      <ns7:UpsertBaseYearEventList>
        <xsl:for-each select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:baseYearEventList/ns1:baseYearEvent">
          <xsl:if test="contains(ns4:transactionType,&quot;D&quot;) or (contains(ns4:transactionType,&quot;U&quot;) or contains(ns4:transactionType,&quot;C&quot;))">
            <ns7:baseYearEvent>
              <ns4:ain>
                <xsl:value-of select="ns4:ain"/>
              </ns4:ain>
              <xsl:if test="ns4:aoid">
                <ns4:aoid>
                  <xsl:value-of select="ns4:aoid"/>
                </ns4:aoid>
              </xsl:if>
              <ns4:reviewRequired>
                <xsl:value-of select="../../ns1:reviewRequired"/>
              </ns4:reviewRequired>
              <ns4:byeId>
                <xsl:value-of select="ns4:byeId"/>
              </ns4:byeId>
              <xsl:if test="ns4:ownershipCode">
                <ns4:ownershipCode>
                  <xsl:value-of select="ns4:ownershipCode"/>
                </ns4:ownershipCode>
              </xsl:if>
              <xsl:if test="ns4:percentOwnership">
                <ns4:percentOwnership>
                  <xsl:value-of select="ns4:percentOwnership"/>
                </ns4:percentOwnership>
              </xsl:if>
              <xsl:if test="ns4:eventNameId">
                <ns4:eventNameId>
                  <xsl:value-of select="ns4:eventNameId"/>
                </ns4:eventNameId>
              </xsl:if>
              <xsl:if test="ns4:eventNameKey">
                <ns4:eventNameKey>
                  <xsl:value-of select="ns4:eventNameKey"/>
                </ns4:eventNameKey>
              </xsl:if>
              <xsl:if test="ns4:eventNameLegend">
                <ns4:eventNameLegend>
                  <xsl:value-of select="ns4:eventNameLegend"/>
                </ns4:eventNameLegend>
              </xsl:if>
              <xsl:if test="ns4:eventDescriptionId">
                <ns4:eventDescriptionId>
                  <xsl:value-of select="ns4:eventDescriptionId"/>
                </ns4:eventDescriptionId>
              </xsl:if>
              <xsl:if test="ns4:eventDescriptionKey">
                <ns4:eventDescriptionKey>
                  <xsl:value-of select="ns4:eventDescriptionKey"/>
                </ns4:eventDescriptionKey>
              </xsl:if>
              <xsl:if test="ns4:eventDescriptionLegend">
                <ns4:eventDescriptionLegend>
                  <xsl:value-of select="ns4:eventDescriptionLegend"/>
                </ns4:eventDescriptionLegend>
              </xsl:if>
              <xsl:if test="ns4:eventDate">
                <ns4:eventDate>
                  <xsl:value-of select="ns4:eventDate"/>
                </ns4:eventDate>
              </xsl:if>
              <xsl:if test="ns4:recordingDate">
                <ns4:recordingDate>
                  <xsl:value-of select="ns4:recordingDate"/>
                </ns4:recordingDate>
              </xsl:if>
              <xsl:if test="ns4:documentNumber">
                <ns4:documentNumber>
                  <xsl:value-of select="ns4:documentNumber"/>
                </ns4:documentNumber>
              </xsl:if>
              <xsl:if test="ns4:sequenceNumber">
                <ns4:sequenceNumber>
                  <xsl:value-of select="ns4:sequenceNumber"/>
                </ns4:sequenceNumber>
              </xsl:if>
              <xsl:if test="ns4:baseYear">
                <ns4:baseYear>
                  <xsl:value-of select="ns4:baseYear"/>
                </ns4:baseYear>
              </xsl:if>
              <xsl:if test="ns4:subUnitNumber">
                <ns4:subUnitNumber>
                  <xsl:value-of select="ns4:subUnitNumber"/>
                </ns4:subUnitNumber>
              </xsl:if>
              <xsl:if test="ns4:subUnitDescription">
                <ns4:subUnitDescription>
                  <xsl:value-of select="ns4:subUnitDescription"/>
                </ns4:subUnitDescription>
              </xsl:if>
              <xsl:if test="ns4:partiallyCompleteNumber">
                <ns4:partiallyCompleteNumber>
                  <xsl:value-of select="ns4:partiallyCompleteNumber"/>
                </ns4:partiallyCompleteNumber>
              </xsl:if>
              <xsl:if test="ns4:blendedValueFlag">
                <ns4:blendedValueFlag>
                  <xsl:value-of select="ns4:blendedValueFlag"/>
                </ns4:blendedValueFlag>
              </xsl:if>
              <xsl:if test="ns4:percentageAppliedToValue">
                <ns4:percentageAppliedToValue>
                  <xsl:value-of select="ns4:percentageAppliedToValue"/>
                </ns4:percentageAppliedToValue>
              </xsl:if>
              <xsl:if test="ns4:landValue">
                <ns4:landValue>
                  <xsl:value-of select="ns4:landValue"/>
                </ns4:landValue>
              </xsl:if>
              <xsl:if test="ns4:improvementValue">
                <ns4:improvementValue>
                  <xsl:value-of select="ns4:improvementValue"/>
                </ns4:improvementValue>
              </xsl:if>
              <xsl:if test="ns4:landReasonCodeId">
                <ns4:landReasonCodeId>
                  <xsl:value-of select="ns4:landReasonCodeId"/>
                </ns4:landReasonCodeId>
              </xsl:if>
              <xsl:if test="ns4:landReasonCodeKey">
                <ns4:landReasonCodeKey>
                  <xsl:value-of select="ns4:landReasonCodeKey"/>
                </ns4:landReasonCodeKey>
              </xsl:if>
              <xsl:if test="ns4:landReasonCodeLegend">
                <ns4:landReasonCodeLegend>
                  <xsl:value-of select="ns4:landReasonCodeLegend"/>
                </ns4:landReasonCodeLegend>
              </xsl:if>
              <xsl:if test="ns4:improvementReasonCodeId">
                <ns4:improvementReasonCodeId>
                  <xsl:value-of select="ns4:improvementReasonCodeId"/>
                </ns4:improvementReasonCodeId>
              </xsl:if>
              <xsl:if test="ns4:improvementReasonCodeKey">
                <ns4:improvementReasonCodeKey>
                  <xsl:value-of select="ns4:improvementReasonCodeKey"/>
                </ns4:improvementReasonCodeKey>
              </xsl:if>
              <xsl:if test="ns4:improvementReasonCodeLegend">
                <ns4:improvementReasonCodeLegend>
                  <xsl:value-of select="ns4:improvementReasonCodeLegend"/>
                </ns4:improvementReasonCodeLegend>
              </xsl:if>
              <xsl:if test="ns4:fixtureValue">
                <ns4:fixtureValue>
                  <xsl:value-of select="ns4:fixtureValue"/>
                </ns4:fixtureValue>
              </xsl:if>
              <xsl:if test="ns4:retainedLandValue">
                <ns4:retainedLandValue>
                  <xsl:value-of select="ns4:retainedLandValue"/>
                </ns4:retainedLandValue>
              </xsl:if>
              <xsl:if test="ns4:retainedImprovementValue">
                <ns4:retainedImprovementValue>
                  <xsl:value-of select="ns4:retainedImprovementValue"/>
                </ns4:retainedImprovementValue>
              </xsl:if>
              <xsl:if test="ns4:retainedFixtureValue">
                <ns4:retainedFixtureValue>
                  <xsl:value-of select="ns4:retainedFixtureValue"/>
                </ns4:retainedFixtureValue>
              </xsl:if>
              <xsl:if test="ns4:ppAssessmentNumber">
                <ns4:ppAssessmentNumber>
                  <xsl:value-of select="ns4:ppAssessmentNumber"/>
                </ns4:ppAssessmentNumber>
              </xsl:if>
              <xsl:if test="ns4:personalPropertyType">
                <ns4:personalPropertyType>
                  <xsl:value-of select="ns4:personalPropertyType"/>
                </ns4:personalPropertyType>
              </xsl:if>
              <xsl:if test="ns4:ppDescription">
                <ns4:ppDescription>
                  <xsl:value-of select="ns4:ppDescription"/>
                </ns4:ppDescription>
              </xsl:if>
              <xsl:if test="ns4:totalAdjAcquisitionCost">
                <ns4:totalAdjAcquisitionCost>
                  <xsl:value-of select="ns4:totalAdjAcquisitionCost"/>
                </ns4:totalAdjAcquisitionCost>
              </xsl:if>
              <xsl:if test="ns4:percentageFixture">
                <ns4:percentageFixture>
                  <xsl:value-of select="ns4:percentageFixture"/>
                </ns4:percentageFixture>
              </xsl:if>
              <xsl:if test="ns4:effectiveBeginDate">
                <ns4:effectiveBeginDate>
                  <xsl:value-of select="ns4:effectiveBeginDate"/>
                </ns4:effectiveBeginDate>
              </xsl:if>
              <xsl:if test="ns4:effectiveEndDate">
                <ns4:effectiveEndDate>
                  <xsl:value-of select="ns4:effectiveEndDate"/>
                </ns4:effectiveEndDate>
              </xsl:if>
              <xsl:if test="ns4:verificationDate">
                <ns4:verificationDate>
                  <xsl:value-of select="ns4:verificationDate"/>
                </ns4:verificationDate>
              </xsl:if>
              <xsl:if test="ns4:eventSource">
                <ns4:eventSource>
                  <xsl:value-of select="ns4:eventSource"/>
                </ns4:eventSource>
              </xsl:if>
              <xsl:if test="ns4:verifiedBy">
                <ns4:verifiedBy>
                  <xsl:value-of select="ns4:verifiedBy"/>
                </ns4:verifiedBy>
              </xsl:if>
              <xsl:if test="ns4:byeLegacySourceSystem">
                <ns4:byeLegacySourceSystem>
                  <xsl:value-of select="ns4:byeLegacySourceSystem"/>
                </ns4:byeLegacySourceSystem>
              </xsl:if>
              <xsl:if test="ns4:originalAIN">
                <ns4:originalAIN>
                  <xsl:value-of select="ns4:originalAIN"/>
                </ns4:originalAIN>
              </xsl:if>
              <xsl:if test="ns4:originalBYEId">
                <ns4:originalBYEId>
                  <xsl:value-of select="ns4:originalBYEId"/>
                </ns4:originalBYEId>
              </xsl:if>
              <xsl:if test="ns4:rollType">
                <ns4:rollType>
                  <xsl:value-of select="ns4:rollType"/>
                </ns4:rollType>
              </xsl:if>
              <ns4:transactionType>
                <xsl:value-of select="ns4:transactionType"/>
              </ns4:transactionType>
              <xsl:if test="ns4:userId">
                <ns4:userId>
                  <xsl:value-of select="ns4:userId"/>
                </ns4:userId>
              </xsl:if>
              <xsl:if test="ns4:newConstructionDate">
                <ns4:newConstructionDate>
                  <xsl:value-of select="ns4:newConstructionDate"/>
                </ns4:newConstructionDate>
              </xsl:if>
              <xsl:if test="ns4:createBy">
                <ns4:createBy>
                  <xsl:value-of select="ns4:createBy"/>
                </ns4:createBy>
              </xsl:if>
              <xsl:if test="ns4:createdDate">
                <ns4:createdDate>
                  <xsl:value-of select="ns4:createdDate"/>
                </ns4:createdDate>
              </xsl:if>
              <xsl:if test="ns4:modifiedBy">
                <ns4:modifiedBy>
                  <xsl:value-of select="ns4:modifiedBy"/>
                </ns4:modifiedBy>
              </xsl:if>
              <xsl:if test="ns4:inactiveDate">
                <ns4:inactiveDate>
                  <xsl:value-of select="ns4:inactiveDate"/>
                </ns4:inactiveDate>
              </xsl:if>
              <xsl:if test="ns4:modifiedDate">
                <ns4:modifiedDate>
                  <xsl:value-of select="ns4:modifiedDate"/>
                </ns4:modifiedDate>
              </xsl:if>
              <xsl:if test="ns4:currentOnClose">
                <ns4:currentOnClose>
                  <xsl:value-of select="ns4:currentOnClose"/>
                </ns4:currentOnClose>
              </xsl:if>
              <xsl:if test="ns4:notes">
                <ns4:notes>
                  <xsl:value-of select="ns4:notes"/>
                </ns4:notes>
              </xsl:if>
            </ns7:baseYearEvent>
          </xsl:if>
        </xsl:for-each>
      </ns7:UpsertBaseYearEventList>
    </ns7:UpsertBaseYearEventsRequest>
  </xsl:template>
</xsl:stylesheet>