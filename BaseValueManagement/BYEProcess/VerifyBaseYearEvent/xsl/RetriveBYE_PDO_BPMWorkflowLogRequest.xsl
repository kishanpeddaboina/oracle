<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns7="http://xmlns.oracle.com/bpel/workflow/common" xmlns:ns6="http://assessor.lacounty.gov/amp/type/common/ResponseHeader/v1.0" xmlns:evidence="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:bpmo="http://xmlns.oracle.com/bpm/bpmobject/" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:ns9="http://assessor.lacounty.gov/amp/data/ao/LogWorkFlowDetails/v1.0" xmlns:ns5="http://assessor.lacounty.gov/amp/type/common/RequestHeader/v1.0" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ns2="http://xmlns.oracle.com/bpm/bpmobject/Data/SortBYEBO" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns3="http://xmlns.oracle.com/bpm/bpmobject/Data/AssignToUserOrGroupBO" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://assessor.lacounty.gov/amp/data/bvm/RetrieveBYE/v1.0" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ns0="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns4="http://assessor.lacounty.gov/amp/type/bvm/BaseYearEvent/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://xmlns.oracle.com/bpel/workflow/task" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:ns8="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns7 ns6 evidence bpmo jaxb ns5 ns2 ns3 ns1 ns0 ns4 xsd tns ns8 ns9 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../businessCatalog/Data/RetriveBYEDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="RetriveBYEDetails" namespace="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails"/>
            <oracle-xsl-mapper:param name="RetriveBYE_PDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/soa/shared/workflow/WorkflowTask.xsd"/>
            <oracle-xsl-mapper:rootElement name="task" namespace="http://xmlns.oracle.com/bpel/workflow/task"/>
            <oracle-xsl-mapper:param name="execDataWFLogPDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/ManageBYE.xsd"/>
            <oracle-xsl-mapper:rootElement name="manageBYERequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0"/>
            <oracle-xsl-mapper:param name="ManageBYE_ReqPDO"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/ao/LogWorkFlowDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="logWorkFlowDetailsRequest" namespace="http://assessor.lacounty.gov/amp/data/ao/LogWorkFlowDetails/v1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU MAR 09 12:18:09 IST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="execDataWFLogPDO"/>
  <xsl:param name="ManageBYE_ReqPDO"/>
  <xsl:template match="/">
    <ns9:logWorkFlowDetailsRequest>
      <ns9:header>
        <ns5:applicationId>
          <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:header/ns5:applicationId"/>
        </ns5:applicationId>
        <ns5:requestId>
          <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:header/ns5:requestId"/>
        </ns5:requestId>
      </ns9:header>
      <ns9:ain>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:ain"/>
      </ns9:ain>
      <ns9:aoid>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:aoid"/>
      </ns9:aoid>
      <ns9:userId>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:userId"/>
      </ns9:userId>
      <ns9:processType>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:processType"/>
      </ns9:processType>
      <ns9:initiatedBy>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:userId"/>
      </ns9:initiatedBy>
      <ns9:initiatedDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:createdDate"/>
      </ns9:initiatedDate>
      <ns9:claimedBy>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:acquiredBy"/>
      </ns9:claimedBy>
      <ns9:claimedDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:assignedDate"/>
      </ns9:claimedDate>
      <ns9:reviewedBy>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:reviewers/tns:id"/>
      </ns9:reviewedBy>
      <ns9:reviewedDate>
        <xsl:value-of select="xp20:current-dateTime()"/>
      </ns9:reviewedDate>
      <ns9:editStatus>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome"/>
      </ns9:editStatus>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;SUBMIT&quot;)">
          <ns9:editBy>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedBy/tns:id"/>
          </ns9:editBy>
        </xsl:when>
        <xsl:otherwise>
          <ns9:editBy>
            <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:userId"/>
          </ns9:editBy>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;SUBMIT&quot;)">
          <ns9:editDate>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedDate"/>
          </ns9:editDate>
        </xsl:when>
        <xsl:otherwise>
          <ns9:editDate>
            <xsl:value-of select="string(&quot;&quot;)"/>
          </ns9:editDate>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;APPROVE&quot;)">
          <ns9:approvedBy>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedBy/tns:id"/>
          </ns9:approvedBy>
        </xsl:when>
        <xsl:otherwise>
          <ns9:approvedBy>
            <xsl:value-of select="string(&quot;&quot;)"/>
          </ns9:approvedBy>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;APPROVE&quot;)">
          <ns9:approvedDate>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedDate"/>
          </ns9:approvedDate>
        </xsl:when>
        <xsl:otherwise>
          <ns9:approvedDate>
            <xsl:value-of select="string(&quot;&quot;)"/>
          </ns9:approvedDate>
        </xsl:otherwise>
      </xsl:choose>
      <ns9:processStatus>
        <xsl:text disable-output-escaping="no">COMPLETED</xsl:text>
      </ns9:processStatus>
      <ns9:processName>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeName"/>
      </ns9:processName>
      <ns9:processInstanceId>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeInstanceId"/>
      </ns9:processInstanceId>
      <ns9:ecid>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:ecId"/>
      </ns9:ecid>
      <ns9:district>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsOriginal/ns1:districtName"/>
      </ns9:district>
      <ns9:region>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsOriginal/ns1:region"/>
      </ns9:region>
      <ns9:processStartTime>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeCreatedTime"/>
      </ns9:processStartTime>
      <ns9:processEndTime>
        <xsl:value-of select="xp20:current-dateTime()"/>
      </ns9:processEndTime>
      <xsl:copy-of select="$execDataWFLogPDO/tns:task/tns:payload">
        <?oracle-xsl-mapper-position ns9:processPayload?>
      </xsl:copy-of>
      <ns9:taskId>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:taskId"/>
      </ns9:taskId>
      <ns9:taskName>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:title"/>
      </ns9:taskName>
      <ns9:taskAction>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:userComment/tns:action"/>
      </ns9:taskAction>
      <ns9:taskType>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:title"/>
      </ns9:taskType>
      <ns9:assignee>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:assignees/tns:id"/>
      </ns9:assignee>
      <ns9:taskStartDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:createdDate"/>
      </ns9:taskStartDate>
      <ns9:taskEndDate>
        <xsl:value-of select="xp20:current-dateTime()"/>
      </ns9:taskEndDate>
      <ns9:source>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:Source"/>
      </ns9:source>
      <ns9:owner>
        <xsl:value-of select="$ManageBYE_ReqPDO/ns8:manageBYERequest/ns8:ownerId"/>
      </ns9:owner>
      <ns9:notes>
        <xsl:for-each select="$execDataWFLogPDO/tns:task/tns:userComment">
          <ns9:notes>
            <ns9:description>
              <xsl:value-of select="tns:comment"/>
            </ns9:description>
            <ns9:updateBy>
              <xsl:value-of select="tns:updatedBy/tns:id"/>
            </ns9:updateBy>
          </ns9:notes>
        </xsl:for-each>
      </ns9:notes>
      <ns9:attachments>
        <xsl:for-each select="$execDataWFLogPDO/tns:task/tns:attachment">
          <xsl:if test=".">
            <ns9:attachments>
              <xsl:if test="tns:content">
                <ns9:content>
                  <xsl:value-of select="tns:content"/>
                </ns9:content>
              </xsl:if>
              <xsl:if test="tns:mimeType">
                <ns9:mimeType>
                  <xsl:value-of select="tns:mimeType"/>
                </ns9:mimeType>
              </xsl:if>
              <ns9:documentName>
                <xsl:value-of select="tns:name"/>
              </ns9:documentName>
              <ns9:documentObjID>
                <xsl:value-of select="tns:id"/>
              </ns9:documentObjID>
              <ns9:documentURL>
                <xsl:value-of select="tns:URI"/>
              </ns9:documentURL>
              <xsl:if test="tns:systemVersionFlag">
                <ns9:systemVersionFlag>
                  <xsl:value-of select="tns:systemVersionFlag"/>
                </ns9:systemVersionFlag>
              </xsl:if>
              <xsl:if test="tns:taskId">
                <ns9:taskId>
                  <xsl:value-of select="tns:taskId"/>
                </ns9:taskId>
              </xsl:if>
              <xsl:if test="tns:version">
                <ns9:version>
                  <xsl:value-of select="tns:version"/>
                </ns9:version>
              </xsl:if>
              <xsl:if test="tns:acl">
                <ns9:acl>
                  <xsl:value-of select="tns:acl"/>
                </ns9:acl>
              </xsl:if>
              <xsl:if test="tns:doesBelongToParent">
                <ns9:doesBelongToParent>
                  <xsl:value-of select="tns:doesBelongToParent"/>
                </ns9:doesBelongToParent>
              </xsl:if>
              <ns9:documentType>
                <xsl:value-of select="tns:mimeType"/>
              </ns9:documentType>
              <ns9:updateBy>
                <xsl:value-of select="tns:id"/>
              </ns9:updateBy>
              <xsl:if test="tns:updatedDate">
                <ns9:updatedDate>
                  <xsl:value-of select="tns:updatedDate"/>
                </ns9:updatedDate>
              </xsl:if>
              <xsl:if test="tns:correlationId">
                <ns9:correlationId>
                  <xsl:value-of select="tns:correlationId"/>
                </ns9:correlationId>
              </xsl:if>
              <xsl:if test="tns:size">
                <ns9:size>
                  <xsl:value-of select="tns:size"/>
                </ns9:size>
              </xsl:if>
              <xsl:if test="tns:description">
                <ns9:description>
                  <xsl:value-of select="tns:description"/>
                </ns9:description>
              </xsl:if>
              <xsl:if test="tns:storageType">
                <ns9:storageType>
                  <xsl:value-of select="tns:storageType"/>
                </ns9:storageType>
              </xsl:if>
              <xsl:if test="tns:ucmDocType">
                <ns9:ucmDocType>
                  <xsl:value-of select="tns:ucmDocType"/>
                </ns9:ucmDocType>
              </xsl:if>
              <xsl:if test="tns:securityGroup">
                <ns9:securityGroup>
                  <xsl:value-of select="tns:securityGroup"/>
                </ns9:securityGroup>
              </xsl:if>
              <xsl:if test="tns:account">
                <ns9:account>
                  <xsl:value-of select="tns:account"/>
                </ns9:account>
              </xsl:if>
              <xsl:if test="tns:revision">
                <ns9:revision>
                  <xsl:value-of select="tns:revision"/>
                </ns9:revision>
              </xsl:if>
              <xsl:if test="tns:releaseDate">
                <ns9:releaseDate>
                  <xsl:value-of select="tns:releaseDate"/>
                </ns9:releaseDate>
              </xsl:if>
              <xsl:if test="tns:expirationDate">
                <ns9:expirationDate>
                  <xsl:value-of select="tns:expirationDate"/>
                </ns9:expirationDate>
              </xsl:if>
              <xsl:if test="tns:title">
                <ns9:title>
                  <xsl:value-of select="tns:title"/>
                </ns9:title>
              </xsl:if>
              <xsl:if test="tns:attachmentScope">
                <ns9:attachmentScope>
                  <xsl:value-of select="tns:attachmentScope"/>
                </ns9:attachmentScope>
              </xsl:if>
              <xsl:if test="tns:isContentEncoded">
                <ns9:isContentEncoded>
                  <xsl:value-of select="tns:isContentEncoded"/>
                </ns9:isContentEncoded>
              </xsl:if>
              <xsl:if test="tns:updatedByDisplayName">
                <ns9:updatedByDisplayName>
                  <xsl:value-of select="tns:updatedByDisplayName"/>
                </ns9:updatedByDisplayName>
              </xsl:if>
              <xsl:if test="tns:id">
                <ns9:id>
                  <xsl:value-of select="tns:id"/>
                </ns9:id>
              </xsl:if>
              <xsl:if test="tns:operation">
                <ns9:operation>
                  <xsl:value-of select="tns:operation"/>
                </ns9:operation>
              </xsl:if>
            </ns9:attachments>
          </xsl:if>
        </xsl:for-each>
      </ns9:attachments>
      <ns9:elapsedTime>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:elapsedTime"/>
      </ns9:elapsedTime>
      <ns9:taskNum>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:taskNumber"/>
      </ns9:taskNum>
      <ns9:outcome>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome"/>
      </ns9:outcome>
      <ns9:state>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:state"/>
      </ns9:state>
      <ns9:taskTitle>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:title"/>
      </ns9:taskTitle>
    </ns9:logWorkFlowDetailsRequest>
  </xsl:template>
</xsl:stylesheet>