<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns7="http://assessor.lacounty.gov/amp/type/common/ResponseHeader/v1.0" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:bpmo="http://xmlns.oracle.com/bpm/bpmobject/" xmlns:ns6="http://assessor.lacounty.gov/amp/type/common/RequestHeader/v1.0" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns2="http://xmlns.oracle.com/bpm/bpmobject/Data/SortBYEBO" xmlns:ns3="http://xmlns.oracle.com/bpm/bpmobject/Data/AssignToUserOrGroupBO" xmlns:tns="http://assessor.lacounty.gov/amp/data/bvm/VerifyBYE/v1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://assessor.lacounty.gov/amp/data/bvm/RetrieveBYE/v1.0" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ns0="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:ns8="http://assessor.lacounty.gov/amp/data/bvm/UpsertBaseYearEvents/v1.0" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns5="http://assessor.lacounty.gov/amp/type/bvm/BaseYearEvent/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:ns4="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns7 bpmo ns6 ns2 ns3 tns ns1 ns0 ns5 xsd ns4 ns8 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../businessCatalog/Data/RetriveBYEDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="RetriveBYEDetails" namespace="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails"/>
            <oracle-xsl-mapper:param name="RetriveBYE_PDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/VerifyBYE.xsd"/>
            <oracle-xsl-mapper:rootElement name="verifyBYERequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/VerifyBYE/v1.0"/>
            <oracle-xsl-mapper:param name="VerifyBYE_ReqPDO"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/UpsertBaseYearEvents.xsd"/>
            <oracle-xsl-mapper:rootElement name="UpsertBaseYearEventsRequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/UpsertBaseYearEvents/v1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU MAR 09 12:18:09 IST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="VerifyBYE_ReqPDO"/>
  <xsl:template match="/">
    <ns8:UpsertBaseYearEventsRequest>
      <ns8:header>
        <ns6:applicationId>
          <xsl:value-of select="$VerifyBYE_ReqPDO/tns:verifyBYERequest/tns:header/ns6:applicationId"/>
        </ns6:applicationId>
        <ns6:requestId>
          <xsl:value-of select="$VerifyBYE_ReqPDO/tns:verifyBYERequest/tns:header/ns6:requestId"/>
        </ns6:requestId>
      </ns8:header>
      <ns8:ain>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:ain"/>
      </ns8:ain>
      <ns8:userId>
        <xsl:value-of select="$VerifyBYE_ReqPDO/tns:verifyBYERequest/tns:userId"/>
      </ns8:userId>
      <ns8:aoid>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:aoid"/>
      </ns8:aoid>
      <ns8:processStatus>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:processStatus"/>
      </ns8:processStatus>
      <ns8:ecid>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:ecid"/>
      </ns8:ecid>
      <ns8:dbLockStatus>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:dbLockStatus"/>
      </ns8:dbLockStatus>
      <ns8:lockedByUserId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:lockedByUserId"/>
      </ns8:lockedByUserId>
      <ns8:districtId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:districtId"/>
      </ns8:districtId>
      <ns8:districtName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:districtName"/>
      </ns8:districtName>
      <ns8:region>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:region"/>
      </ns8:region>
      <ns8:regionName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:regionName"/>
      </ns8:regionName>
      <ns8:clusterRouteId>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRouteId"/>
      </ns8:clusterRouteId>
      <ns8:clusterRoute>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRoute"/>
      </ns8:clusterRoute>
      <ns8:clusterRouteName>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:clusterRouteName"/>
      </ns8:clusterRouteName>
      <ns8:UpsertBaseYearEventList>
        <xsl:for-each select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsUserModified/ns1:baseYearEventList/ns1:baseYearEvent">
          <xsl:if test="contains(ns5:transactionType,&quot;D&quot;) or (contains(ns5:transactionType,&quot;U&quot;) or contains(ns5:transactionType,&quot;C&quot;))">
            <ns8:baseYearEvent>
              <ns5:ain>
                <xsl:value-of select="ns5:ain"/>
              </ns5:ain>
              <xsl:if test="ns5:aoid">
                <ns5:aoid>
                  <xsl:value-of select="ns5:aoid"/>
                </ns5:aoid>
              </xsl:if>
              <ns5:reviewRequired>
                <xsl:value-of select="../../ns1:reviewRequired"/>
              </ns5:reviewRequired>
              <ns5:byeId>
                <xsl:value-of select="ns5:byeId"/>
              </ns5:byeId>
              <xsl:if test="ns5:ownershipCode">
                <ns5:ownershipCode>
                  <xsl:value-of select="ns5:ownershipCode"/>
                </ns5:ownershipCode>
              </xsl:if>
              <xsl:if test="ns5:percentOwnership">
                <ns5:percentOwnership>
                  <xsl:value-of select="ns5:percentOwnership"/>
                </ns5:percentOwnership>
              </xsl:if>
              <xsl:if test="ns5:eventNameId">
                <ns5:eventNameId>
                  <xsl:value-of select="ns5:eventNameId"/>
                </ns5:eventNameId>
              </xsl:if>
              <xsl:if test="ns5:eventNameKey">
                <ns5:eventNameKey>
                  <xsl:value-of select="ns5:eventNameKey"/>
                </ns5:eventNameKey>
              </xsl:if>
              <xsl:if test="ns5:eventNameLegend">
                <ns5:eventNameLegend>
                  <xsl:value-of select="ns5:eventNameLegend"/>
                </ns5:eventNameLegend>
              </xsl:if>
              <xsl:if test="ns5:eventDescriptionId">
                <ns5:eventDescriptionId>
                  <xsl:value-of select="ns5:eventDescriptionId"/>
                </ns5:eventDescriptionId>
              </xsl:if>
              <xsl:if test="ns5:eventDescriptionKey">
                <ns5:eventDescriptionKey>
                  <xsl:value-of select="ns5:eventDescriptionKey"/>
                </ns5:eventDescriptionKey>
              </xsl:if>
              <xsl:if test="ns5:eventDescriptionLegend">
                <ns5:eventDescriptionLegend>
                  <xsl:value-of select="ns5:eventDescriptionLegend"/>
                </ns5:eventDescriptionLegend>
              </xsl:if>
              <xsl:if test="ns5:eventDate">
                <ns5:eventDate>
                  <xsl:value-of select="ns5:eventDate"/>
                </ns5:eventDate>
              </xsl:if>
              <xsl:if test="ns5:recordingDate">
                <ns5:recordingDate>
                  <xsl:value-of select="ns5:recordingDate"/>
                </ns5:recordingDate>
              </xsl:if>
              <xsl:if test="ns5:documentNumber">
                <ns5:documentNumber>
                  <xsl:value-of select="ns5:documentNumber"/>
                </ns5:documentNumber>
              </xsl:if>
              <xsl:if test="ns5:sequenceNumber">
                <ns5:sequenceNumber>
                  <xsl:value-of select="ns5:sequenceNumber"/>
                </ns5:sequenceNumber>
              </xsl:if>
              <xsl:if test="ns5:baseYear">
                <ns5:baseYear>
                  <xsl:value-of select="ns5:baseYear"/>
                </ns5:baseYear>
              </xsl:if>
              <xsl:if test="ns5:subUnitNumber">
                <ns5:subUnitNumber>
                  <xsl:value-of select="ns5:subUnitNumber"/>
                </ns5:subUnitNumber>
              </xsl:if>
              <xsl:if test="ns5:subUnitDescription">
                <ns5:subUnitDescription>
                  <xsl:value-of select="ns5:subUnitDescription"/>
                </ns5:subUnitDescription>
              </xsl:if>
              <xsl:if test="ns5:partiallyCompleteNumber">
                <ns5:partiallyCompleteNumber>
                  <xsl:value-of select="ns5:partiallyCompleteNumber"/>
                </ns5:partiallyCompleteNumber>
              </xsl:if>
              <xsl:if test="ns5:blendedValueFlag">
                <ns5:blendedValueFlag>
                  <xsl:value-of select="ns5:blendedValueFlag"/>
                </ns5:blendedValueFlag>
              </xsl:if>
              <xsl:if test="ns5:percentageAppliedToValue">
                <ns5:percentageAppliedToValue>
                  <xsl:value-of select="ns5:percentageAppliedToValue"/>
                </ns5:percentageAppliedToValue>
              </xsl:if>
              <xsl:if test="ns5:landValue">
                <ns5:landValue>
                  <xsl:value-of select="ns5:landValue"/>
                </ns5:landValue>
              </xsl:if>
              <xsl:if test="ns5:improvementValue">
                <ns5:improvementValue>
                  <xsl:value-of select="ns5:improvementValue"/>
                </ns5:improvementValue>
              </xsl:if>
              <xsl:if test="ns5:landReasonCodeId">
                <ns5:landReasonCodeId>
                  <xsl:value-of select="ns5:landReasonCodeId"/>
                </ns5:landReasonCodeId>
              </xsl:if>
              <xsl:if test="ns5:landReasonCodeKey">
                <ns5:landReasonCodeKey>
                  <xsl:value-of select="ns5:landReasonCodeKey"/>
                </ns5:landReasonCodeKey>
              </xsl:if>
              <xsl:if test="ns5:landReasonCodeLegend">
                <ns5:landReasonCodeLegend>
                  <xsl:value-of select="ns5:landReasonCodeLegend"/>
                </ns5:landReasonCodeLegend>
              </xsl:if>
              <xsl:if test="ns5:improvementReasonCodeId">
                <ns5:improvementReasonCodeId>
                  <xsl:value-of select="ns5:improvementReasonCodeId"/>
                </ns5:improvementReasonCodeId>
              </xsl:if>
              <xsl:if test="ns5:improvementReasonCodeKey">
                <ns5:improvementReasonCodeKey>
                  <xsl:value-of select="ns5:improvementReasonCodeKey"/>
                </ns5:improvementReasonCodeKey>
              </xsl:if>
              <xsl:if test="ns5:improvementReasonCodeLegend">
                <ns5:improvementReasonCodeLegend>
                  <xsl:value-of select="ns5:improvementReasonCodeLegend"/>
                </ns5:improvementReasonCodeLegend>
              </xsl:if>
              <xsl:if test="ns5:fixtureValue">
                <ns5:fixtureValue>
                  <xsl:value-of select="ns5:fixtureValue"/>
                </ns5:fixtureValue>
              </xsl:if>
              <xsl:if test="ns5:retainedLandValue">
                <ns5:retainedLandValue>
                  <xsl:value-of select="ns5:retainedLandValue"/>
                </ns5:retainedLandValue>
              </xsl:if>
              <xsl:if test="ns5:retainedImprovementValue">
                <ns5:retainedImprovementValue>
                  <xsl:value-of select="ns5:retainedImprovementValue"/>
                </ns5:retainedImprovementValue>
              </xsl:if>
              <xsl:if test="ns5:retainedFixtureValue">
                <ns5:retainedFixtureValue>
                  <xsl:value-of select="ns5:retainedFixtureValue"/>
                </ns5:retainedFixtureValue>
              </xsl:if>
              <xsl:if test="ns5:ppAssessmentNumber">
                <ns5:ppAssessmentNumber>
                  <xsl:value-of select="ns5:ppAssessmentNumber"/>
                </ns5:ppAssessmentNumber>
              </xsl:if>
              <xsl:if test="ns5:personalPropertyType">
                <ns5:personalPropertyType>
                  <xsl:value-of select="ns5:personalPropertyType"/>
                </ns5:personalPropertyType>
              </xsl:if>
              <xsl:if test="ns5:ppDescription">
                <ns5:ppDescription>
                  <xsl:value-of select="ns5:ppDescription"/>
                </ns5:ppDescription>
              </xsl:if>
              <xsl:if test="ns5:totalAdjAcquisitionCost">
                <ns5:totalAdjAcquisitionCost>
                  <xsl:value-of select="ns5:totalAdjAcquisitionCost"/>
                </ns5:totalAdjAcquisitionCost>
              </xsl:if>
              <xsl:if test="ns5:percentageFixture">
                <ns5:percentageFixture>
                  <xsl:value-of select="ns5:percentageFixture"/>
                </ns5:percentageFixture>
              </xsl:if>
              <xsl:if test="ns5:effectiveBeginDate">
                <ns5:effectiveBeginDate>
                  <xsl:value-of select="ns5:effectiveBeginDate"/>
                </ns5:effectiveBeginDate>
              </xsl:if>
              <xsl:if test="ns5:effectiveEndDate">
                <ns5:effectiveEndDate>
                  <xsl:value-of select="ns5:effectiveEndDate"/>
                </ns5:effectiveEndDate>
              </xsl:if>
              <xsl:if test="ns5:verificationDate">
                <ns5:verificationDate>
                  <xsl:value-of select="ns5:verificationDate"/>
                </ns5:verificationDate>
              </xsl:if>
              <xsl:if test="ns5:eventSource">
                <ns5:eventSource>
                  <xsl:value-of select="ns5:eventSource"/>
                </ns5:eventSource>
              </xsl:if>
              <xsl:if test="ns5:verifiedBy">
                <ns5:verifiedBy>
                  <xsl:value-of select="ns5:verifiedBy"/>
                </ns5:verifiedBy>
              </xsl:if>
              <xsl:if test="ns5:byeLegacySourceSystem">
                <ns5:byeLegacySourceSystem>
                  <xsl:value-of select="ns5:byeLegacySourceSystem"/>
                </ns5:byeLegacySourceSystem>
              </xsl:if>
              <xsl:if test="ns5:originalAIN">
                <ns5:originalAIN>
                  <xsl:value-of select="ns5:originalAIN"/>
                </ns5:originalAIN>
              </xsl:if>
              <xsl:if test="ns5:originalBYEId">
                <ns5:originalBYEId>
                  <xsl:value-of select="ns5:originalBYEId"/>
                </ns5:originalBYEId>
              </xsl:if>
              <xsl:if test="ns5:rollType">
                <ns5:rollType>
                  <xsl:value-of select="ns5:rollType"/>
                </ns5:rollType>
              </xsl:if>
              <xsl:if test="ns5:transactionType">
                <ns5:transactionType>
                  <xsl:value-of select="ns5:transactionType"/>
                </ns5:transactionType>
              </xsl:if>
              <xsl:if test="ns5:userId">
                <ns5:userId>
                  <xsl:value-of select="ns5:userId"/>
                </ns5:userId>
              </xsl:if>
              <xsl:if test="ns5:newConstructionDate">
                <ns5:newConstructionDate>
                  <xsl:value-of select="ns5:newConstructionDate"/>
                </ns5:newConstructionDate>
              </xsl:if>
              <xsl:if test="ns5:createBy">
                <ns5:createBy>
                  <xsl:value-of select="ns5:createBy"/>
                </ns5:createBy>
              </xsl:if>
              <xsl:if test="ns5:createdDate">
                <ns5:createdDate>
                  <xsl:value-of select="ns5:createdDate"/>
                </ns5:createdDate>
              </xsl:if>
              <xsl:if test="ns5:modifiedBy">
                <ns5:modifiedBy>
                  <xsl:value-of select="ns5:modifiedBy"/>
                </ns5:modifiedBy>
              </xsl:if>
              <xsl:if test="ns5:inactiveDate">
                <ns5:inactiveDate>
                  <xsl:value-of select="ns5:inactiveDate"/>
                </ns5:inactiveDate>
              </xsl:if>
              <xsl:if test="ns5:modifiedDate">
                <ns5:modifiedDate>
                  <xsl:value-of select="ns5:modifiedDate"/>
                </ns5:modifiedDate>
              </xsl:if>
              <xsl:if test="ns5:currentOnClose">
                <ns5:currentOnClose>
                  <xsl:value-of select="ns5:currentOnClose"/>
                </ns5:currentOnClose>
              </xsl:if>
              <xsl:if test="ns5:notes">
                <ns5:notes>
                  <xsl:value-of select="ns5:notes"/>
                </ns5:notes>
              </xsl:if>
              <ns5:asmtRollId>
                <xsl:value-of select="ns5:asmtRollId"/>
              </ns5:asmtRollId>
            </ns8:baseYearEvent>
          </xsl:if>
        </xsl:for-each>
      </ns8:UpsertBaseYearEventList>
    </ns8:UpsertBaseYearEventsRequest>
  </xsl:template>
</xsl:stylesheet>