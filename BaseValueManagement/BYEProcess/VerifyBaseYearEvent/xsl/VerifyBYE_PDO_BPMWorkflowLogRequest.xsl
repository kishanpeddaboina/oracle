<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns8="http://xmlns.oracle.com/bpel/workflow/common" xmlns:ns7="http://assessor.lacounty.gov/amp/type/common/ResponseHeader/v1.0" xmlns:evidence="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:bpmo="http://xmlns.oracle.com/bpm/bpmobject/" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:ns10="http://assessor.lacounty.gov/amp/data/ao/LogWorkFlowDetails/v1.0" xmlns:ns6="http://assessor.lacounty.gov/amp/type/common/RequestHeader/v1.0" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ns2="http://xmlns.oracle.com/bpm/bpmobject/Data/SortBYEBO" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns3="http://xmlns.oracle.com/bpm/bpmobject/Data/AssignToUserOrGroupBO" xmlns:ns9="http://assessor.lacounty.gov/amp/data/bvm/VerifyBYE/v1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://assessor.lacounty.gov/amp/data/bvm/RetrieveBYE/v1.0" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ns0="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns5="http://assessor.lacounty.gov/amp/type/bvm/BaseYearEvent/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://xmlns.oracle.com/bpel/workflow/task" xmlns:bpmn="http://schemas.oracle.com/bpm/xpath" xmlns:ns4="http://assessor.lacounty.gov/amp/data/bvm/ManageBYE/v1.0" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns8 ns7 evidence bpmo jaxb ns6 ns2 ns3 ns9 ns1 ns0 ns5 xsd tns ns4 ns10 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../businessCatalog/Data/RetriveBYEDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="RetriveBYEDetails" namespace="http://xmlns.oracle.com/bpm/bpmobject/Data/RetriveBYEDetails"/>
            <oracle-xsl-mapper:param name="RetriveBYE_PDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/soa/shared/workflow/WorkflowTask.xsd"/>
            <oracle-xsl-mapper:rootElement name="task" namespace="http://xmlns.oracle.com/bpel/workflow/task"/>
            <oracle-xsl-mapper:param name="execDataWFLogPDO"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/bvm/VerifyBYE.xsd"/>
            <oracle-xsl-mapper:rootElement name="verifyBYERequest" namespace="http://assessor.lacounty.gov/amp/data/bvm/VerifyBYE/v1.0"/>
            <oracle-xsl-mapper:param name="VerifyBYE_ReqPDO"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/amp/xsd/ao/LogWorkFlowDetails.xsd"/>
            <oracle-xsl-mapper:rootElement name="logWorkFlowDetailsRequest" namespace="http://assessor.lacounty.gov/amp/data/ao/LogWorkFlowDetails/v1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU MAR 09 12:18:09 IST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="execDataWFLogPDO"/>
  <xsl:param name="VerifyBYE_ReqPDO"/>
  <xsl:template match="/">
    <ns10:logWorkFlowDetailsRequest>
      <ns10:header>
        <ns6:applicationId>
          <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:header/ns6:applicationId"/>
        </ns6:applicationId>
        <ns6:requestId>
          <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:header/ns6:requestId"/>
        </ns6:requestId>
      </ns10:header>
      <ns10:ain>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:ain"/>
      </ns10:ain>
      <ns10:aoid>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:aoid"/>
      </ns10:aoid>
      <ns10:userId>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:userId"/>
      </ns10:userId>
      <ns10:processType>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:processType"/>
      </ns10:processType>
      <ns10:initiatedBy>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:userId"/>
      </ns10:initiatedBy>
      <ns10:initiatedDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeCreatedTime"/>
      </ns10:initiatedDate>
      <ns10:claimedBy>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:acquiredBy"/>
      </ns10:claimedBy>
      <ns10:reviewedBy>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:reviewers/tns:id"/>
      </ns10:reviewedBy>
      <ns10:editStatus>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome"/>
      </ns10:editStatus>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;SUBMIT&quot;)">
          <ns10:editBy>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedBy/tns:id"/>
          </ns10:editBy>
        </xsl:when>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;SUBMIT&quot;)">
          <ns10:editDate>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedDate"/>
          </ns10:editDate>
        </xsl:when>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;APPROVE&quot;)">
          <ns10:approvedBy>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedBy/tns:id"/>
          </ns10:approvedBy>
        </xsl:when>
        <xsl:otherwise>
          <ns10:approvedBy>
            <xsl:text disable-output-escaping="no"/>
          </ns10:approvedBy>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="contains($execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome,&quot;APPROVE&quot;)">
          <ns10:approvedDate>
            <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:updatedDate"/>
          </ns10:approvedDate>
        </xsl:when>
        <xsl:otherwise>
          <ns10:approvedDate>
            <xsl:text disable-output-escaping="no"/>
          </ns10:approvedDate>
        </xsl:otherwise>
      </xsl:choose>
      <ns10:processStatus>
        <xsl:text disable-output-escaping="no">COMPLETED</xsl:text>
      </ns10:processStatus>
      <ns10:processName>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeName"/>
      </ns10:processName>
      <ns10:processInstanceId>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeInstanceId"/>
      </ns10:processInstanceId>
      <ns10:ecid>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:ecId"/>
      </ns10:ecid>
      <ns10:district>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsOriginal/ns1:districtName"/>
      </ns10:district>
      <ns10:region>
        <xsl:value-of select="/ns0:RetriveBYEDetails/ns1:RetrieveBYEDetails/ns1:BYEDetailsOriginal/ns1:region"/>
      </ns10:region>
      <ns10:processStartTime>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:sca/tns:compositeCreatedTime"/>
      </ns10:processStartTime>
      <ns10:processEndTime>
        <xsl:value-of select="xp20:current-dateTime()"/>
      </ns10:processEndTime>
      <xsl:copy-of select="$execDataWFLogPDO/tns:task/tns:payload">
        <?oracle-xsl-mapper-position ns10:processPayload?>
      </xsl:copy-of>
      <ns10:taskId>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:taskId"/>
      </ns10:taskId>
      <ns10:taskName>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:taskNumber"/>
      </ns10:taskName>
      <ns10:taskAction>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome"/>
      </ns10:taskAction>
      <ns10:taskType>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:title"/>
      </ns10:taskType>
      <ns10:assignee>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:assignees/tns:id"/>
      </ns10:assignee>
      <ns10:taskStartDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:createdDate"/>
      </ns10:taskStartDate>
      <ns10:taskEndDate>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:endDate"/>
      </ns10:taskEndDate>
      <ns10:source>
        <xsl:value-of select="$VerifyBYE_ReqPDO/ns9:verifyBYERequest/ns9:Source"/>
      </ns10:source>
      <ns10:owner>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:ownerGroup"/>
      </ns10:owner>
      <ns10:notes>
        <xsl:for-each select="$execDataWFLogPDO/tns:task/tns:userComment">
          <ns10:notes>
            <ns10:description>
              <xsl:value-of select="tns:comment"/>
            </ns10:description>
            <ns10:updateBy>
              <xsl:value-of select="tns:updatedBy/tns:id"/>
            </ns10:updateBy>
            <xsl:if test="tns:updatedDate">
              <ns10:updatedDate>
                <xsl:value-of select="tns:updatedDate"/>
              </ns10:updatedDate>
            </xsl:if>
          </ns10:notes>
        </xsl:for-each>
      </ns10:notes>
      <ns10:attachments>
        <xsl:for-each select="$execDataWFLogPDO/tns:task/tns:attachment">
          <ns10:attachments>
            <xsl:if test="tns:content">
              <ns10:content>
                <xsl:value-of select="tns:content"/>
              </ns10:content>
            </xsl:if>
            <xsl:if test="tns:mimeType">
              <ns10:mimeType>
                <xsl:value-of select="tns:mimeType"/>
              </ns10:mimeType>
            </xsl:if>
            <xsl:if test="tns:name">
              <ns10:documentName>
                <xsl:value-of select="tns:name"/>
              </ns10:documentName>
            </xsl:if>
            <xsl:if test="tns:id">
              <ns10:documentObjID>
                <xsl:value-of select="tns:id"/>
              </ns10:documentObjID>
            </xsl:if>
            <ns10:documentURL>
              <xsl:value-of select="tns:URI"/>
            </ns10:documentURL>
            <xsl:if test="tns:systemVersionFlag">
              <ns10:systemVersionFlag>
                <xsl:value-of select="tns:systemVersionFlag"/>
              </ns10:systemVersionFlag>
            </xsl:if>
            <xsl:if test="tns:taskId">
              <ns10:taskId>
                <xsl:value-of select="tns:taskId"/>
              </ns10:taskId>
            </xsl:if>
            <xsl:if test="tns:version">
              <ns10:version>
                <xsl:value-of select="tns:version"/>
              </ns10:version>
            </xsl:if>
            <xsl:if test="tns:acl">
              <ns10:acl>
                <xsl:value-of select="tns:acl"/>
              </ns10:acl>
            </xsl:if>
            <xsl:if test="tns:doesBelongToParent">
              <ns10:doesBelongToParent>
                <xsl:value-of select="tns:doesBelongToParent"/>
              </ns10:doesBelongToParent>
            </xsl:if>
            <ns10:documentType>
              <xsl:value-of select="tns:ucmDocType"/>
            </ns10:documentType>
            <ns10:updateBy>
              <xsl:value-of select="tns:id"/>
            </ns10:updateBy>
            <xsl:if test="tns:updatedDate">
              <ns10:updatedDate>
                <xsl:value-of select="tns:updatedDate"/>
              </ns10:updatedDate>
            </xsl:if>
            <xsl:if test="tns:correlationId">
              <ns10:correlationId>
                <xsl:value-of select="tns:correlationId"/>
              </ns10:correlationId>
            </xsl:if>
            <xsl:if test="tns:size">
              <ns10:size>
                <xsl:value-of select="tns:size"/>
              </ns10:size>
            </xsl:if>
            <xsl:if test="tns:description">
              <ns10:description>
                <xsl:value-of select="tns:description"/>
              </ns10:description>
            </xsl:if>
            <xsl:if test="tns:storageType">
              <ns10:storageType>
                <xsl:value-of select="tns:storageType"/>
              </ns10:storageType>
            </xsl:if>
            <xsl:if test="tns:ucmDocType">
              <ns10:ucmDocType>
                <xsl:value-of select="tns:ucmDocType"/>
              </ns10:ucmDocType>
            </xsl:if>
            <xsl:if test="tns:securityGroup">
              <ns10:securityGroup>
                <xsl:value-of select="tns:securityGroup"/>
              </ns10:securityGroup>
            </xsl:if>
            <xsl:if test="tns:account">
              <ns10:account>
                <xsl:value-of select="tns:account"/>
              </ns10:account>
            </xsl:if>
            <xsl:if test="tns:revision">
              <ns10:revision>
                <xsl:value-of select="tns:revision"/>
              </ns10:revision>
            </xsl:if>
            <xsl:if test="tns:releaseDate">
              <ns10:releaseDate>
                <xsl:value-of select="tns:releaseDate"/>
              </ns10:releaseDate>
            </xsl:if>
            <xsl:if test="tns:expirationDate">
              <ns10:expirationDate>
                <xsl:value-of select="tns:expirationDate"/>
              </ns10:expirationDate>
            </xsl:if>
            <xsl:if test="tns:title">
              <ns10:title>
                <xsl:value-of select="tns:title"/>
              </ns10:title>
            </xsl:if>
            <xsl:if test="tns:attachmentScope">
              <ns10:attachmentScope>
                <xsl:value-of select="tns:attachmentScope"/>
              </ns10:attachmentScope>
            </xsl:if>
            <xsl:if test="tns:isContentEncoded">
              <ns10:isContentEncoded>
                <xsl:value-of select="tns:isContentEncoded"/>
              </ns10:isContentEncoded>
            </xsl:if>
            <xsl:if test="tns:updatedByDisplayName">
              <ns10:updatedByDisplayName>
                <xsl:value-of select="tns:updatedByDisplayName"/>
              </ns10:updatedByDisplayName>
            </xsl:if>
            <xsl:if test="tns:id">
              <ns10:id>
                <xsl:value-of select="tns:id"/>
              </ns10:id>
            </xsl:if>
            <xsl:if test="tns:operation">
              <ns10:operation>
                <xsl:value-of select="tns:operation"/>
              </ns10:operation>
            </xsl:if>
          </ns10:attachments>
        </xsl:for-each>
      </ns10:attachments>
      <ns10:elapsedTime>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:elapsedTime"/>
      </ns10:elapsedTime>
      <ns10:taskNum>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:taskNumber"/>
      </ns10:taskNum>
      <ns10:outcome>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:outcome"/>
      </ns10:outcome>
      <ns10:state>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:systemAttributes/tns:state"/>
      </ns10:state>
      <ns10:taskTitle>
        <xsl:value-of select="$execDataWFLogPDO/tns:task/tns:title"/>
      </ns10:taskTitle>
    </ns10:logWorkFlowDetailsRequest>
  </xsl:template>
</xsl:stylesheet>